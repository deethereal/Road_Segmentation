import tensorflow as tf
import os
import numpy as np
from skimage.io import imread,imshow
from skimage.transform import resize
import  matplotlib.pyplot as plt
from tqdm import tqdm
import  random


seed= 666
np.random.seed=seed
np.random.seed=seed


IMG_WIGTH = 256
IMG_HIGHT = 256
IMG_CHANNELS = 3


TRAINING_PATH ="/content/gdrive/My Drive/train1/"
TEST_PATH = "/content/gdrive/My Drive/test/"

train_ids= []
test_ids= []

for path, train_ids, folders in os.walk(TRAINING_PATH):
    train_ids = sorted(train_ids)
    break
for path, test_ids, folders in os.walk(TEST_PATH):
    test_ids = sorted(test_ids)
    break
##print(test_ids)

X_TRAIN = np.zeros((len(train_ids), IMG_HIGHT, IMG_WIGTH, IMG_CHANNELS), dtype=np.uint8)
Y_TRAIN = np.zeros((len(train_ids), IMG_HIGHT, IMG_WIGTH, 1,), dtype=np.bool)

### подгоняем размеры тренировочного изображения и маски

for n, id_ in tqdm(enumerate(train_ids),total=len(train_ids)):
    path=TRAINING_PATH + id_
    img=imread(path+'/images/'+ id_+'.png')[:,:,:IMG_CHANNELS]
    img=resize(img,(IMG_HIGHT,IMG_WIGTH),mode='constant',preserve_range=True)
    X_TRAIN[n]=img  ##заполням пустые X_TRAIN значениями из img
    mask = np.zeros((IMG_HIGHT, IMG_WIGTH,1),dtype=np.bool)
    for mask_file in next(os.walk(path+'/masks/'))[2]:
        mask_ = imread(path+ '/masks/'+mask_file)
        mask_ = np.expand_dims(resize(mask_, (IMG_HIGHT,IMG_WIGTH), mode='constant',preserve_range=True),axis=-1)
        mask = np.maximum(mask,mask_)
    Y_TRAIN[n] = mask  ##заполням пустые Y_TRAIN значениями из img

####Тестовые изображения

X_tests = np.zeros((len(test_ids),IMG_HIGHT,IMG_WIGTH,IMG_CHANNELS), dtype=np.uint8)
sizes_test = []
for n, id_ in tqdm(enumerate(test_ids),total=len(test_ids)):
    path = TEST_PATH + id_
    img = imread(path+'/images/'+id_+'.png')[:,:,:IMG_CHANNELS]
    sizes_test.append([img.shape[0],img.shape[1]])
    img = resize(img,(IMG_HIGHT,IMG_WIGTH), mode='constant', preserve_range=True)
    X_tests[n]=img


print("Start create model")

